#include<bits/stdc++.h>

using namespace std;

bool doesPathExist(const vector<string>& M);

pair<int, int> findHiddenCell(int N){
    vector<string> M(N);
    M = {

        "11000000000000000000000000000000000000000000000000",
        "11111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111110",
        "01111111111111111111111111111111111111111111111111",
        "00000000000000000000000000000000000000000000000011"

    };
    int x = -1, y = -1;
    for(int i=0;i<50;i++)
    	M[0][i] = M[49][i] = '1';
    for(int i=1;i<49;i++){
        for(int j=1;j<49;j++)
            M[i][j] = '0';
        if(doesPathExist(M)){
            x = i;
            for(int j=1;j<49;j++)
                M[i][j] = '1';
            break;
        }
        for(int j=1;j<49;j++)
            M[i][j] = '1';
    }
    for(int i=0;i<50;i++)
    	M[0][i] = M[49][i] = '0';
    for(int i=0;i<50;i++)
    	M[i][0] = M[i][49] = '1';
    for(int i=1;i<49;i++){
        for(int j=1;j<49;j++)
            M[j][i] = '0';
        if(doesPathExist(M)){
            y = i;
            break;
        }
        for(int j=1;j<49;j++)
            M[j][i] = '1';
    }
    return make_pair(x, y);
}